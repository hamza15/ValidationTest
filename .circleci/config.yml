version: "2.1"

commands:
  fail_fast:
    steps:
      - run:
          name: 'Fail Fast'
          when: on_fail
          command: |
            echo "Canceling workflow as a step resulted in failure"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${CIRCLE_TOKEN}"

jobs:
  helm_test:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  helm_lint:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_install_node_modules:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  dd_monitors_update:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  ci_sanity_check:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  be_build_app_contain:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_storyshot:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_test:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_typecheck:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_format:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_chromatic:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_build_webpack:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_build_nextdoorv2_css:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  be_consolidated:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  be_test:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  be_test_aux:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  be_test_common:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_rules:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  fe_lint:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: sleep 25
      - run: echo "Hello World"
      - run: docker ps
      - fail_fast
  be_test_uWSGI_startup:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  nd_on_ci_data_populator:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
  optional_mypy:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - run: echo "Hello World"
workflows:
  build_and_test:
    jobs:
      - helm_test
      - helm_lint
      - fe_install_node_modules
      - dd_monitors_update
      - ci_sanity_check
      - be_build_app_contain
      - fe_storyshot:
          requires:
            - fe_install_node_modules
      - fe_test:
          requires:
            - fe_install_node_modules
      - fe_typecheck:
          requires:
            - fe_install_node_modules
      - fe_format:
          requires:
            - fe_install_node_modules
      - fe_chromatic:
          requires:
            - fe_install_node_modules
      - fe_build_webpack:
          requires:
            - fe_install_node_modules
      - fe_build_nextdoorv2_css:
          requires:
            - fe_install_node_modules
      - be_consolidated:
          requires:
            - be_build_app_contain
      - be_test:
          requires:
            - be_build_app_contain
      - be_test_aux:
          requires:
            - be_build_app_contain
      - be_test_common:
          requires:
            - be_build_app_contain
      - fe_rules:
          requires:
            - fe_install_node_modules
      - fe_lint:
          requires:
            - fe_install_node_modules
      - be_test_uWSGI_startup:
          requires:
            - be_build_app_contain
      - nd_on_ci_data_populator:
          requires:
            - be_build_app_contain
      - optional_mypy:
          requires:
            - be_build_app_contain
